
(* Find exercise  *)

let n_left = { data <= 12; left <= 0; right <= 0}    (* 0 in head signals null *)
in let n_right = { data <= 44; left <= 0; right <= 0}
in let n_root = { data <= 33; left <= n_left ; right <= n_right }
in let t1 = { root <= n_root ; length <= 3} 
in let find_bt = proc (tr) {
proc (val) {
letrec f (n) =
  if (n.data=val) then 0=0
  else (if (if number?(n.left) then 0=1 else (f n.left)) then 0=0
  else (if (if number?(n.right) then 0=1 else (f n.right)) then 0=0
  else (0=1)))
  in (f tr.root)
}
}
in ((find_bt t1) 12)
